SIZER_REG="$(dirname $0)/Sizer.reg"

LoadSection() {
	local key="$1"
	local isIn=0
	unset Description Width Height NoResize Relocate Top Left

	while IFS= read -r raw; do
		line=$(printf '%s' "$raw" | tr -d '\r')

		case "$line" in
			"[HKEY_CURRENT_USER\\Software\\Sizer\\Menu\\$key]")
				isIn=1
				continue
				;;

			"[HKEY_CURRENT_USER\\Software\\Sizer\\Menu\\"*"]")
				[ "$isIn" -eq 1 ] && break
				;;

			\"*\"=*)
				[ "$isIn" -ne 1 ] && continue
				name=$(echo "$line" | sed -n 's/^"\([^"]*\)".*/\1/p')

				if echo "$line" | grep -qi 'dword:'; then
					hex=$(echo "$line" | sed -n 's/.*dword:\([0-9a-fA-F]\+\).*/\1/p')
					val=$(printf "%d" 0x"$hex")
				else
					val=$(echo "$line" | sed -n 's/^"[^"]*"[[:space:]]*=[[:space:]]*"\(.*\)".*/\1/p')
				fi

				case "$name" in
					Description) Description="$val" ;;
					Width) Width="$val" ;;
					Height) Height="$val" ;;
					NoResize) NoResize="$val" ;;
					Relocate) Relocate="$val" ;;
					Top) Top="$val" ;;
					Left) Left="$val" ;;
				esac
				;;
		esac
	done < "$SIZER_REG"
}

LoadMenu() {
	while IFS= read -r line || [ -n "$line" ]; do
		line=$(printf '%s' "$line" | sed 's/\r$//')

		case "$line" in
			*\\Menu\\[0-9][0-9][0-9]\])
				cur=${line##*\\}; cur=${cur%]}
				;;

			\"Description\"=*|\"description\"=*)
				[ -n "$cur" ] || continue
				val=$(printf '%s' "${line#*=}" | sed 's/^"//; s/"$//')
				echo "$cur"
				echo "$val"
				;;
		esac
	done < "$1"
}

ComputeMove() {
	windowId="$1"

	set -- $(xdotool getdisplaygeometry) || set -- 0 0
	screenWidth="$1"; screenHeight="$2"

	eval "$(xdotool getwindowgeometry --shell "$windowId" | sed -n 's/^\(WIDTH\|HEIGHT\|X\|Y\)=.*/\0/p')"
	windowWidth="$WIDTH"; windowHeight="$HEIGHT"

	xinfo="$(xwininfo -id "$windowId" -frame)"
	LEFT="$(printf '%s\n' "$xinfo" | sed -n 's/^[[:space:]]\+Relative upper-left X:[[:space:]]*\([-0-9]\+\).*/\1/p')"
	TOP="$(printf '%s\n' "$xinfo" | sed -n 's/^[[:space:]]\+Relative upper-left Y:[[:space:]]*\([-0-9]\+\).*/\1/p')"

	offsetX=$((LEFT+LEFT))
	offsetY=$((TOP+LEFT))

	case "${Relocate:-0}" in
		0) targetX=${Left:-0}; targetY=${Top:-0} ;;
		1) targetX=0; targetY=0 ;;
		2) targetX=$(((screenWidth-windowWidth)/2)); targetY=0 ;;
		3) targetX=$((screenWidth-windowWidth-offsetX)); targetY=0 ;;
		4) targetX=0; targetY=$(((screenHeight-windowHeight)/2)) ;;
		5) targetX=$(((screenWidth-windowWidth)/2)); targetY=$(((screenHeight-windowHeight)/2)) ;;
		6) targetX=$((screenWidth-windowWidth-offsetX)); targetY=$(((screenHeight-windowHeight)/2)) ;;
		7) targetX=0; targetY=$((screenHeight-windowHeight-offsetY)) ;;
		8) targetX=$(((screenWidth-windowWidth)/2)); targetY=$((screenHeight-windowHeight-offsetY)) ;;
		9) targetX=$((screenWidth-windowWidth-offsetX)); targetY=$((screenHeight-windowHeight-offsetY)) ;;
		*) targetX=${Left:-0}; targetY=${Top:-0} ;;
	esac

	[ "$targetX" -lt 0 ] && targetX=0
	[ "$targetY" -lt 0 ] && targetY=0
}

ChangeIt() {
	local target=$1

	LoadSection "$2"

	if [ "${NoResize:-0}" -eq 0 ]; then
		xdotool windowsize "$target" "$Width" "$Height"
	fi

	ComputeMove "$target"
	xdotool windowmove "$target" "$targetX" "$targetY"

	xdotool search --name "^Sizer$" | head -n1 | xargs -r xdotool windowkill
}

ShowMenu() {
	local target=$(xdotool getactivewindow)

	LoadMenu "$SIZER_REG" | yad --title="Sizer" \
		--list --mouse --on-top --undecorated --skip-taskbar --close-on-unfocus --no-headers --no-buttons --width=220 --height=440 \
		--column=Key:HD --column=Description --text-align=center \
		--select-action="sh -c '$0 ChangeIt $target %s'"
}

self="$(basename $0)"
if [ -n "$1" ]; then
	$@
else
	ShowMenu 
fi

